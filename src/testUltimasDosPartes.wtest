import cosas2.*
import camion2.*

describe "Consecuencias de la carga" {

	method initialize() {
		camion.descargarTodo()
		if (!bumblebee.estaTransformadoEnAuto()) {
			bumblebee.transformar()
		}
		if (bateriaAntiaerea.tieneMisiles()) {
			bateriaAntiaerea.manipularMisiles()
		}
		contenedorPortuario.cosas([ residuosRadioactivos, arenaAGranel ])
	}

	test "knightRider" {
		const knightRiderInicial = knightRider
		camion.cargar(knightRider)
		assert.equals(knightRiderInicial, knightRider)
	}

	test "bumblebee" {
		camion.cargar(bumblebee)
		assert.notThat(bumblebee.estaTransformadoEnAuto())
	}

	test "paqueteDeLadrillos" {
		const cantidadDeLadrillosInicial = paqueteDeLadrillos.cantidadDeLadrillos()
		camion.cargar(paqueteDeLadrillos)
		assert.equals(cantidadDeLadrillosInicial + 12, paqueteDeLadrillos.cantidadDeLadrillos())
	}

	test "arenaAGranel" {
		const pesoInicial = arenaAGranel.peso()
		camion.cargar(arenaAGranel)
		assert.equals(pesoInicial + 20, arenaAGranel.peso())
	}

	test "bateriaAntiaerea" {
		camion.cargar(bateriaAntiaerea)
		assert.that(bateriaAntiaerea.tieneMisiles())
	}

	test "contenedorPortuario" {
		const pesoInicial = contenedorPortuario.peso()
		camion.cargar(contenedorPortuario)
		// [ residuosRadioactivos, arenaAGranel ]
		assert.equals(pesoInicial + 35, contenedorPortuario.peso())
	}

	test "residuosRadioactivos" {
		const pesoInicial = residuosRadioactivos.peso()
		camion.cargar(residuosRadioactivos)
		assert.equals(pesoInicial + 15, residuosRadioactivos.peso())
	}

	test "embalajeDeSeguridad" {
		const embalajeDeSeguridadInicial = embalajeDeSeguridad
		camion.cargar(embalajeDeSeguridad)
		assert.equals(embalajeDeSeguridadInicial, embalajeDeSeguridad)
	}

}

describe "totalBultos()" {

	method initialize() {
		camion.descargarTodo()
		if (bateriaAntiaerea.tieneMisiles()) {
			bateriaAntiaerea.manipularMisiles()
		}
	}

	test "Son 3 bultos si el camión lleva KnightRider, arena a granel y residuos radioactivos " {
		camion.cargarBultos([ knightRider, arenaAGranel, residuosRadioactivos ])
		assert.equals(3, camion.totalBultos())
	}

	test "Bumblebee y embalajeDeSeguridad equivalen a 2 bultos cada uno" {
		camion.cargarBultos([ bumblebee, embalajeDeSeguridad ])
		assert.equals(4, camion.totalBultos())
	}

	test "El paquete de ladrillos con menos de 101 ladrillos equivale a 1 bulto" {
		paqueteDeLadrillos.cantidadDeLadrillos(50)
		camion.cargarBultos([ paqueteDeLadrillos ])
		assert.equals(1, camion.totalBultos())
	}

	test "El paquete de ladrillos entre 101 y 300 equivale a 2 bultos" {
		paqueteDeLadrillos.cantidadDeLadrillos(150)
		camion.cargarBultos([ paqueteDeLadrillos ])
		assert.equals(2, camion.totalBultos())
	}

	test "El paquete de ladrillos con más de 300 ladrillos equivale a 3 bultos" {
		paqueteDeLadrillos.cantidadDeLadrillos(350)
		camion.cargarBultos([ paqueteDeLadrillos ])
		assert.equals(3, camion.totalBultos())
	}

	test "El contenedor portuario devuelve los bultos que contiene + 1" {
		contenedorPortuario.cosas([ bumblebee, embalajeDeSeguridad, residuosRadioactivos ])
		assert.equals(6, contenedorPortuario.bultos())
		camion.cargar(contenedorPortuario)
		assert.equals(6, camion.totalBultos())
	}

	test "La batería antiaerea equivale a un bulto sin misiles, y a dos bultos con misiles" {
		assert.equals(1, bateriaAntiaerea.bultos())
		bateriaAntiaerea.manipularMisiles()
		assert.equals(2, bateriaAntiaerea.bultos())
	}

}

